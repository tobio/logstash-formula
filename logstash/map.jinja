# -*- coding: utf-8 -*-
# vim: ft=jinja

{## Start with  defaults from defaults.yaml ##}
{% import_yaml 'logstash/defaults.yaml' as default_settings %}

{##
Setup variable using grains['os_family'] based logic, only add key:values here
that differ from whats in defaults.yaml
##}
{% set os_family_map = salt['grains.filter_by']({
         'Debian': {
            'use_upstream_repo': True,
            'pkg': 'logstash',
            'svc': 'logstash',
            'pkgstate': 'latest',
            'indent': 4
        },
        'RedHat': {
            'use_upstream_repo': True,
            'pkg': 'logstash',
            'svc': 'logstash',
            'pkgstate': 'latest',
            'indent': 4
        }
  }
  , grain="os_family"
  , merge=salt['pillar.get']('logstash:lookup'))
%}
{## Merge the flavor_map to the default settings ##}
{% do default_settings.logstash.update(os_family_map) %}

{## Merge in logstash:lookup pillar ##}
{% set logstash = salt['pillar.get'](
        'logstash',
        default=default_settings.logstash,
        merge=True
    )
%}

{%- if 'upstream_repo' not in logstash %}
    {%- set upstream_repos = salt['grains.filter_by']({
        'Debian': {
            '5.x': 'deb https://artifacts.elastic.co/packages/5.x/apt stable main',
            '2.4': 'deb https://packages.elastic.co/logstash/2.4/debian stable main',
            '2.3': 'deb https://packages.elastic.co/logstash/2.3/debian stable main',
            '1.5': 'deb http://packages.elasticsearch.org/logstash/1.5/debian stable main'
        },
        'RedHat': {
            '5.x': 'https://artifacts.elastic.co/packages/5.x/yum',
            '2.4': 'https://packages.elastic.co/logstash/2.4/centos',
            '2.3': 'https://packages.elastic.co/logstash/2.3/centos',
            '1.5': 'http://packages.elasticsearch.org/logstash/1.5/centos'
        }
    }) %}
    {%- do logstash.update(upstream_repo=upstream_repos[logstash.repoversion]) %}
{%- endif %}

{%- macro output_indented(col, string) %}
{{ string|indent(col, true) -}}
{%- endmacro %}

{% macro format_logstash_config(plugin_type, plugin_array) %}
{%- set col = 0 %}
{{- output_indented(col, plugin_type + ' {') }}
{%- set col = col + logstash.indent %}
{%- for plugin in plugin_array %}
  {%- if plugin.cond is defined %}
    {{- output_indented(col, (plugin.cond + " {")) }}
    {%- set col = col + logstash.indent %}
  {%- endif %}
  {{- output_indented(col, (plugin.plugin_name + " {")) }}
  {%- set col = col + logstash.indent %}
  {%- for key, value in plugin.items() %}
    {%- if key == 'plugin_name' or key == 'cond' %} {#pass#}
    {%- elif value is sameas True or value is sameas False %}
      {{- output_indented(col, (key + ' => ' + value|string|lower)) }}
    {%- elif value is string or value is number %}
      {{- output_indented(col, (key + ' => "' + value|string + '"')) }}
    {%- elif value is mapping %}
      {{- output_indented(col, (key + ' => {')) }}
      {%- set col = col + logstash.indent %}
      {%- for attr_key, attr_value in value.items() %}
        {{- output_indented(col, (attr_key + ' => "' + attr_value + '"')) }}
      {%- endfor %}
      {%- set col = col - logstash.indent %}
      {{- output_indented(col, '}') }}
    {%- elif value is iterable %}
      {{- output_indented(col, key + ' => [') }}
      {%- set col = col + logstash.indent %}
      {%- for item in value %}
        {{- output_indented(col, '"' + item + '"') }}{%- if loop.last == false %},{%- endif -%}
      {%- endfor %}
      {%- set col = col - logstash.indent %}
      {{- output_indented(col, ']') }}
    {%- endif %}
  {%- endfor %}
  {%- set col = col - logstash.indent %}
  {{- output_indented(col, '}') }}
  {%- if plugin.cond is defined %}
    {%- set col = col - logstash.indent %}
    {{- output_indented(col, '}') }}
  {%- endif %}
  {%- endfor %}
}
{%- endmacro %}
